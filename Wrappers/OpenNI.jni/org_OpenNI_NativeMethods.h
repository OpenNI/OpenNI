/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_OpenNI_NativeMethods */

#ifndef _Included_org_OpenNI_NativeMethods
#define _Included_org_OpenNI_NativeMethods
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    readByte
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_OpenNI_NativeMethods_readByte
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    readShort
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_OpenNI_NativeMethods_readShort
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    readInt
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_readInt
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    readLong
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_OpenNI_NativeMethods_readLong
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    copyToBuffer
 * Signature: (Ljava/nio/ByteBuffer;JI)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_copyToBuffer
  (JNIEnv *, jclass, jobject, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    createProductionNodeDescription
 * Signature: (ILjava/lang/String;Ljava/lang/String;BBSI)J
 */
JNIEXPORT jlong JNICALL Java_org_OpenNI_NativeMethods_createProductionNodeDescription
  (JNIEnv *, jclass, jint, jstring, jstring, jbyte, jbyte, jshort, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    freeProductionNodeDescription
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_freeProductionNodeDescription
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetStatusString
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_OpenNI_NativeMethods_xnGetStatusString
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnInit
 * Signature: (Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnInit
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnContextRunXmlScriptFromFileEx
 * Signature: (JLjava/lang/String;JLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnContextRunXmlScriptFromFileEx
  (JNIEnv *, jclass, jlong, jstring, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnContextRunXmlScriptEx
 * Signature: (JLjava/lang/String;JLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnContextRunXmlScriptEx
  (JNIEnv *, jclass, jlong, jstring, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnInitFromXmlFileEx
 * Signature: (Ljava/lang/String;Lorg/OpenNI/OutArg;JLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnInitFromXmlFileEx
  (JNIEnv *, jclass, jstring, jobject, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnContextOpenFileRecordingEx
 * Signature: (JLjava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnContextOpenFileRecordingEx
  (JNIEnv *, jclass, jlong, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnContextAddRef
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnContextAddRef
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnContextRelease
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnContextRelease
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnEnumerateProductionTrees
 * Signature: (JIJLorg/OpenNI/OutArg;J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnEnumerateProductionTrees
  (JNIEnv *, jclass, jlong, jint, jlong, jobject, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnCreateProductionTree
 * Signature: (JJLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnCreateProductionTree
  (JNIEnv *, jclass, jlong, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnCreateAnyProductionTree
 * Signature: (JIJLorg/OpenNI/OutArg;J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnCreateAnyProductionTree
  (JNIEnv *, jclass, jlong, jint, jlong, jobject, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnEnumerateExistingNodes
 * Signature: (JLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnEnumerateExistingNodes
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnEnumerateExistingNodesByType
 * Signature: (JILorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnEnumerateExistingNodesByType
  (JNIEnv *, jclass, jlong, jint, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnFindExistingRefNodeByType
 * Signature: (JILorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnFindExistingRefNodeByType
  (JNIEnv *, jclass, jlong, jint, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetRefNodeHandleByName
 * Signature: (JLjava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetRefNodeHandleByName
  (JNIEnv *, jclass, jlong, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnWaitAndUpdateAll
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnWaitAndUpdateAll
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnWaitOneUpdateAll
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnWaitOneUpdateAll
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnWaitAnyUpdateAll
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnWaitAnyUpdateAll
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnWaitNoneUpdateAll
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnWaitNoneUpdateAll
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnStartGeneratingAll
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnStartGeneratingAll
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnStopGeneratingAll
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnStopGeneratingAll
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetGlobalMirror
 * Signature: (JZ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetGlobalMirror
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetGlobalMirror
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnGetGlobalMirror
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetGlobalErrorState
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetGlobalErrorState
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToGlobalErrorStateChange
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToGlobalErrorStateChange
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromGlobalErrorStateChange
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromGlobalErrorStateChange
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnAddLicense
 * Signature: (JLjava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnAddLicense
  (JNIEnv *, jclass, jlong, jstring, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnEnumerateLicenses
 * Signature: (JLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnEnumerateLicenses
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnEnumerationErrorsAllocate
 * Signature: (Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnEnumerationErrorsAllocate
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnEnumerationErrorsFree
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnEnumerationErrorsFree
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnEnumerationErrorsToString
 * Signature: (JLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnEnumerationErrorsToString
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnEnumerationErrorsClear
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnEnumerationErrorsClear
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnEnumerationErrorsGetFirst
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_OpenNI_NativeMethods_xnEnumerationErrorsGetFirst
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnEnumerationErrorsIteratorIsValid
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnEnumerationErrorsIteratorIsValid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoSetInstanceName
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoSetInstanceName
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoGetDescription
 * Signature: (J)Lorg/OpenNI/ProductionNodeDescription;
 */
JNIEXPORT jobject JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoGetDescription
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoGetInstanceName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoGetInstanceName
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoGetCreationInfo
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoGetCreationInfo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoGetNeededNodes
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoGetNeededNodes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoGetRefHandle
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoGetRefHandle
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoListAllocate
 * Signature: (Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoListAllocate
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoListFree
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoListFree
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoListAdd
 * Signature: (JJLjava/lang/String;J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoListAdd
  (JNIEnv *, jclass, jlong, jlong, jstring, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoListAddNode
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoListAddNode
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoListAddNodeFromList
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoListAddNodeFromList
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoListRemove
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoListRemove
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoListClear
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoListClear
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoListAppend
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoListAppend
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoListIsEmpty
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoListIsEmpty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoListGetFirst
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoListGetFirst
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoListIteratorIsValid
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoListIteratorIsValid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoListGetCurrent
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoListGetCurrent
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeInfoListGetNext
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_OpenNI_NativeMethods_xnNodeInfoListGetNext
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeQueryAllocate
 * Signature: (Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeQueryAllocate
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeQueryFree
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnNodeQueryFree
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeQuerySetVendor
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeQuerySetVendor
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeQuerySetName
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeQuerySetName
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeQuerySetMinVersion
 * Signature: (JBBSI)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeQuerySetMinVersion
  (JNIEnv *, jclass, jlong, jbyte, jbyte, jshort, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeQuerySetMaxVersion
 * Signature: (JBBSI)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeQuerySetMaxVersion
  (JNIEnv *, jclass, jlong, jbyte, jbyte, jshort, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeQueryAddSupportedCapability
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeQueryAddSupportedCapability
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeQueryAddSupportedMapOutputMode
 * Signature: (JIII)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeQueryAddSupportedMapOutputMode
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeQuerySetSupportedMinUserPositions
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeQuerySetSupportedMinUserPositions
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeQuerySetExistingNodeOnly
 * Signature: (JZ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeQuerySetExistingNodeOnly
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeQuerySetNonExistingNodeOnly
 * Signature: (JZ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeQuerySetNonExistingNodeOnly
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeQueryAddNeededNode
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeQueryAddNeededNode
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeQuerySetCreationInfo
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeQuerySetCreationInfo
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNodeQueryFilterList
 * Signature: (JJJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnNodeQueryFilterList
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnProductionNodeAddRef
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnProductionNodeAddRef
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnProductionNodeRelease
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnProductionNodeRelease
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetNodeInfo
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_OpenNI_NativeMethods_xnGetNodeInfo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetNodeName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_OpenNI_NativeMethods_xnGetNodeName
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetRefContextFromNodeHandle
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_OpenNI_NativeMethods_xnGetRefContextFromNodeHandle
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsCapabilitySupported
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsCapabilitySupported
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetIntProperty
 * Signature: (JLjava/lang/String;J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetIntProperty
  (JNIEnv *, jclass, jlong, jstring, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetRealProperty
 * Signature: (JLjava/lang/String;D)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetRealProperty
  (JNIEnv *, jclass, jlong, jstring, jdouble);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetStringProperty
 * Signature: (JLjava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetStringProperty
  (JNIEnv *, jclass, jlong, jstring, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetGeneralProperty
 * Signature: (JLjava/lang/String;IJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetGeneralProperty
  (JNIEnv *, jclass, jlong, jstring, jint, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetGeneralPropertyArray
 * Signature: (JLjava/lang/String;[B)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetGeneralPropertyArray
  (JNIEnv *, jclass, jlong, jstring, jbyteArray);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetIntProperty
 * Signature: (JLjava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetIntProperty
  (JNIEnv *, jclass, jlong, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetRealProperty
 * Signature: (JLjava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetRealProperty
  (JNIEnv *, jclass, jlong, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetStringProperty
 * Signature: (JLjava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetStringProperty
  (JNIEnv *, jclass, jlong, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetGeneralProperty
 * Signature: (JLjava/lang/String;IJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetGeneralProperty
  (JNIEnv *, jclass, jlong, jstring, jint, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetGeneralPropertyArray
 * Signature: (JLjava/lang/String;[B)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetGeneralPropertyArray
  (JNIEnv *, jclass, jlong, jstring, jbyteArray);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnLockNodeForChanges
 * Signature: (JLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnLockNodeForChanges
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnlockNodeForChanges
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnUnlockNodeForChanges
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnLockedNodeStartChanges
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnLockedNodeStartChanges
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnLockedNodeEndChanges
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnLockedNodeEndChanges
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnAddNeededNode
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnAddNeededNode
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRemoveNeededNode
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRemoveNeededNode
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnCreateDevice
 * Signature: (JLorg/OpenNI/OutArg;JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnCreateDevice
  (JNIEnv *, jclass, jlong, jobject, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetDeviceName
 * Signature: (JLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetDeviceName
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetVendorSpecificData
 * Signature: (JLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetVendorSpecificData
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetSerialNumber
 * Signature: (JLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetSerialNumber
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetNodeErrorState
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetNodeErrorState
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToNodeErrorStateChange
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToNodeErrorStateChange
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromNodeErrorStateChange
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromNodeErrorStateChange
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetGeneralIntRange
 * Signature: (JLjava/lang/String;Lorg/OpenNI/OutArg;Lorg/OpenNI/OutArg;Lorg/OpenNI/OutArg;Lorg/OpenNI/OutArg;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetGeneralIntRange
  (JNIEnv *, jclass, jlong, jstring, jobject, jobject, jobject, jobject, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetGeneralIntValue
 * Signature: (JLjava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetGeneralIntValue
  (JNIEnv *, jclass, jlong, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetGeneralIntValue
 * Signature: (JLjava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetGeneralIntValue
  (JNIEnv *, jclass, jlong, jstring, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToGeneralIntValueChange
 * Signature: (JLjava/lang/String;Ljava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToGeneralIntValueChange
  (JNIEnv *, jclass, jlong, jstring, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromGeneralIntValueChange
 * Signature: (JLjava/lang/String;J)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromGeneralIntValueChange
  (JNIEnv *, jclass, jlong, jstring, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnStartGenerating
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnStartGenerating
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsGenerating
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsGenerating
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnStopGenerating
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnStopGenerating
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToGenerationRunningChange
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToGenerationRunningChange
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromGenerationRunningChange
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromGenerationRunningChange
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToNewDataAvailable
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToNewDataAvailable
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromNewDataAvailable
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromNewDataAvailable
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsNewDataAvailable
 * Signature: (JLorg/OpenNI/OutArg;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsNewDataAvailable
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnWaitAndUpdateData
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnWaitAndUpdateData
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsDataNew
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsDataNew
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetData
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_OpenNI_NativeMethods_xnGetData
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetDataSize
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetDataSize
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetTimestamp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_OpenNI_NativeMethods_xnGetTimestamp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetFrameID
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetFrameID
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetMirror
 * Signature: (JZ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetMirror
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsMirrored
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsMirrored
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToMirrorChange
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToMirrorChange
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromMirrorChange
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromMirrorChange
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsViewPointSupported
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsViewPointSupported
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetViewPoint
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetViewPoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnResetViewPoint
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnResetViewPoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsViewPointAs
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsViewPointAs
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToViewPointChange
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToViewPointChange
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromViewPointChange
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromViewPointChange
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnCanFrameSyncWith
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnCanFrameSyncWith
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnFrameSyncWith
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnFrameSyncWith
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnStopFrameSyncWith
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnStopFrameSyncWith
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsFrameSyncedWith
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsFrameSyncedWith
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToFrameSyncChange
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToFrameSyncChange
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromFrameSyncChange
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromFrameSyncChange
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetSupportedMapOutputModesCount
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetSupportedMapOutputModesCount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetSupportedMapOutputModes
 * Signature: (J[Lorg/OpenNI/MapOutputMode;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetSupportedMapOutputModes
  (JNIEnv *, jclass, jlong, jobjectArray);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetMapOutputMode
 * Signature: (JIII)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetMapOutputMode
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetMapOutputMode
 * Signature: (JLorg/OpenNI/OutArg;Lorg/OpenNI/OutArg;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetMapOutputMode
  (JNIEnv *, jclass, jlong, jobject, jobject, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToMapOutputModeChange
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToMapOutputModeChange
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromMapOutputModeChange
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromMapOutputModeChange
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetBytesPerPixel
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetBytesPerPixel
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetCropping
 * Signature: (JIIIIZ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetCropping
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jboolean);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetCropping
 * Signature: (JLorg/OpenNI/OutArg;Lorg/OpenNI/OutArg;Lorg/OpenNI/OutArg;Lorg/OpenNI/OutArg;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetCropping
  (JNIEnv *, jclass, jlong, jobject, jobject, jobject, jobject, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToCroppingChange
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToCroppingChange
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromCroppingChange
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromCroppingChange
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetPowerLineFrequency
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetPowerLineFrequency
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetPowerLineFrequency
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetPowerLineFrequency
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToPowerLineFrequencyChange
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToPowerLineFrequencyChange
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromPowerLineFrequencyChange
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromPowerLineFrequencyChange
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnCreateDepthGenerator
 * Signature: (JLorg/OpenNI/OutArg;JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnCreateDepthGenerator
  (JNIEnv *, jclass, jlong, jobject, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetDeviceMaxDepth
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_org_OpenNI_NativeMethods_xnGetDeviceMaxDepth
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetDepthFieldOfView
 * Signature: (JLorg/OpenNI/OutArg;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetDepthFieldOfView
  (JNIEnv *, jclass, jlong, jobject, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToDepthFieldOfViewChange
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToDepthFieldOfViewChange
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromDepthFieldOfViewChange
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromDepthFieldOfViewChange
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnConvertProjectiveToRealWorld
 * Signature: (J[Lorg/OpenNI/Point3D;[Lorg/OpenNI/Point3D;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnConvertProjectiveToRealWorld
  (JNIEnv *, jclass, jlong, jobjectArray, jobjectArray);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnConvertRealWorldToProjective
 * Signature: (J[Lorg/OpenNI/Point3D;[Lorg/OpenNI/Point3D;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnConvertRealWorldToProjective
  (JNIEnv *, jclass, jlong, jobjectArray, jobjectArray);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetDepthMap
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_OpenNI_NativeMethods_xnGetDepthMap
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetDepthMetaData
 * Signature: (JLorg/OpenNI/DepthMetaData;)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnGetDepthMetaData
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetSupportedUserPositionsCount
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetSupportedUserPositionsCount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetUserPosition
 * Signature: (JIFFFFFF)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetUserPosition
  (JNIEnv *, jclass, jlong, jint, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetUserPosition
 * Signature: (JILorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetUserPosition
  (JNIEnv *, jclass, jlong, jint, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToUserPositionChange
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToUserPositionChange
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromUserPositionChange
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromUserPositionChange
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnCreateImageGenerator
 * Signature: (JLorg/OpenNI/OutArg;JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnCreateImageGenerator
  (JNIEnv *, jclass, jlong, jobject, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetImageMap
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_OpenNI_NativeMethods_xnGetImageMap
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsPixelFormatSupported
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsPixelFormatSupported
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetPixelFormat
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetPixelFormat
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetPixelFormat
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetPixelFormat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToPixelFormatChange
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToPixelFormatChange
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromPixelFormatChange
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromPixelFormatChange
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetImageMetaData
 * Signature: (JLorg/OpenNI/ImageMetaData;)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnGetImageMetaData
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnCreateIRGenerator
 * Signature: (JLorg/OpenNI/OutArg;JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnCreateIRGenerator
  (JNIEnv *, jclass, jlong, jobject, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetIRMap
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_OpenNI_NativeMethods_xnGetIRMap
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetIRMetaData
 * Signature: (JLorg/OpenNI/IRMetaData;)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnGetIRMetaData
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnCreateGestureGenerator
 * Signature: (JLorg/OpenNI/OutArg;JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnCreateGestureGenerator
  (JNIEnv *, jclass, jlong, jobject, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnAddGesture
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnAddGesture__JLjava_lang_String_2
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnAddGesture
 * Signature: (JLjava/lang/String;FFFFFF)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnAddGesture__JLjava_lang_String_2FFFFFF
  (JNIEnv *, jclass, jlong, jstring, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRemoveGesture
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRemoveGesture
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetAllActiveGestures
 * Signature: (JLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetAllActiveGestures
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetNumberOfAvailableGestures
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetNumberOfAvailableGestures
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnEnumerateAllGestures
 * Signature: (JLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnEnumerateAllGestures
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsGestureAvailable
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsGestureAvailable
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsGestureProgressSupported
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsGestureProgressSupported
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterGestureCallbacks
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterGestureCallbacks
  (JNIEnv *, jclass, jlong, jobject, jstring, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterGestureCallbacks
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterGestureCallbacks
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToGestureChange
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToGestureChange
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromGestureChange
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromGestureChange
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToGestureIntermediateStageCompleted
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToGestureIntermediateStageCompleted
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromGestureIntermediateStageCompleted
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromGestureIntermediateStageCompleted
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToGestureReadyForNextIntermediateStage
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToGestureReadyForNextIntermediateStage
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromGestureReadyForNextIntermediateStage
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromGestureReadyForNextIntermediateStage
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnCreateSceneAnalyzer
 * Signature: (JLorg/OpenNI/OutArg;JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnCreateSceneAnalyzer
  (JNIEnv *, jclass, jlong, jobject, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetLabelMap
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_OpenNI_NativeMethods_xnGetLabelMap
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetFloor
 * Signature: (JLorg/OpenNI/OutArg;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetFloor
  (JNIEnv *, jclass, jlong, jobject, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetSceneMetaData
 * Signature: (JLorg/OpenNI/SceneMetaData;)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnGetSceneMetaData
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnCreateUserGenerator
 * Signature: (JLorg/OpenNI/OutArg;JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnCreateUserGenerator
  (JNIEnv *, jclass, jlong, jobject, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetNumberOfUsers
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetNumberOfUsers
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetUsers
 * Signature: (JLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetUsers
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetUserCoM
 * Signature: (JILorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetUserCoM
  (JNIEnv *, jclass, jlong, jint, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetUserPixels
 * Signature: (JILorg/OpenNI/SceneMetaData;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetUserPixels
  (JNIEnv *, jclass, jlong, jint, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterUserCallbacks
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterUserCallbacks
  (JNIEnv *, jclass, jlong, jobject, jstring, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterUserCallbacks
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterUserCallbacks
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToUserExit
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToUserExit
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromUserExit
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromUserExit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToUserReEnter
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToUserReEnter
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromUserReEnter
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromUserReEnter
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsJointAvailable
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsJointAvailable
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsProfileAvailable
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsProfileAvailable
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetSkeletonProfile
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetSkeletonProfile
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetJointActive
 * Signature: (JIZ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetJointActive
  (JNIEnv *, jclass, jlong, jint, jboolean);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsJointActive
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsJointActive
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToJointConfigurationChange
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToJointConfigurationChange
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromJointConfigurationChange
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromJointConfigurationChange
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnEnumerateActiveJoints
 * Signature: (JLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnEnumerateActiveJoints
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetSkeletonJoint
 * Signature: (JIILorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetSkeletonJoint
  (JNIEnv *, jclass, jlong, jint, jint, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetSkeletonJointPosition
 * Signature: (JIILorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetSkeletonJointPosition
  (JNIEnv *, jclass, jlong, jint, jint, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetSkeletonJointOrientation
 * Signature: (JIILorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetSkeletonJointOrientation
  (JNIEnv *, jclass, jlong, jint, jint, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsSkeletonTracking
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsSkeletonTracking
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsSkeletonCalibrated
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsSkeletonCalibrated
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsSkeletonCalibrating
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsSkeletonCalibrating
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRequestSkeletonCalibration
 * Signature: (JIZ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRequestSkeletonCalibration
  (JNIEnv *, jclass, jlong, jint, jboolean);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnAbortSkeletonCalibration
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnAbortSkeletonCalibration
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSaveSkeletonCalibrationDataToFile
 * Signature: (JILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSaveSkeletonCalibrationDataToFile
  (JNIEnv *, jclass, jlong, jint, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnLoadSkeletonCalibrationDataFromFile
 * Signature: (JILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnLoadSkeletonCalibrationDataFromFile
  (JNIEnv *, jclass, jlong, jint, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSaveSkeletonCalibrationData
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSaveSkeletonCalibrationData
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnLoadSkeletonCalibrationData
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnLoadSkeletonCalibrationData
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnClearSkeletonCalibrationData
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnClearSkeletonCalibrationData
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsSkeletonCalibrationData
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsSkeletonCalibrationData
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnStartSkeletonTracking
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnStartSkeletonTracking
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnStopSkeletonTracking
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnStopSkeletonTracking
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnResetSkeleton
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnResetSkeleton
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnNeedPoseForSkeletonCalibration
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnNeedPoseForSkeletonCalibration
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetSkeletonCalibrationPose
 * Signature: (JLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetSkeletonCalibrationPose
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetSkeletonSmoothing
 * Signature: (JF)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetSkeletonSmoothing
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToCalibrationStart
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToCalibrationStart
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromCalibrationStart
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromCalibrationStart
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToCalibrationInProgress
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToCalibrationInProgress
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromCalibrationInProgress
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromCalibrationInProgress
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToCalibrationComplete
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToCalibrationComplete
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromCalibrationComplete
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromCalibrationComplete
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetNumberOfPoses
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetNumberOfPoses
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetAllAvailablePoses
 * Signature: (JLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetAllAvailablePoses
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnStartPoseDetection
 * Signature: (JLjava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnStartPoseDetection
  (JNIEnv *, jclass, jlong, jstring, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnStopPoseDetection
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnStopPoseDetection
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToPoseDetected
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToPoseDetected
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromPoseDetected
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromPoseDetected
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToOutOfPose
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToOutOfPose
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromOutOfPose
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromOutOfPose
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToPoseDetectionInProgress
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToPoseDetectionInProgress
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromPoseDetectionInProgress
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromPoseDetectionInProgress
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsPoseSupported
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsPoseSupported
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetPoseStatus
 * Signature: (JILjava/lang/String;Lorg/OpenNI/OutArg;Lorg/OpenNI/OutArg;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetPoseStatus
  (JNIEnv *, jclass, jlong, jint, jstring, jobject, jobject, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnCreateHandsGenerator
 * Signature: (JLorg/OpenNI/OutArg;JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnCreateHandsGenerator
  (JNIEnv *, jclass, jlong, jobject, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterHandCallbacks
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterHandCallbacks
  (JNIEnv *, jclass, jlong, jobject, jstring, jstring, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterHandCallbacks
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterHandCallbacks
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnStopTracking
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnStopTracking
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnStopTrackingAll
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnStopTrackingAll
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnStartTracking
 * Signature: (JFFF)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnStartTracking
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetTrackingSmoothing
 * Signature: (JF)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetTrackingSmoothing
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToHandTouchingFOVEdge
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToHandTouchingFOVEdge
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromHandTouchingFOVEdge
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromHandTouchingFOVEdge
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnCreateAudioGenerator
 * Signature: (JLorg/OpenNI/OutArg;JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnCreateAudioGenerator
  (JNIEnv *, jclass, jlong, jobject, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetAudioBuffer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_OpenNI_NativeMethods_xnGetAudioBuffer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetSupportedWaveOutputModesCount
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetSupportedWaveOutputModesCount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetSupportedWaveOutputModes
 * Signature: (J[Lorg/OpenNI/WaveOutputMode;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetSupportedWaveOutputModes
  (JNIEnv *, jclass, jlong, jobjectArray);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetWaveOutputMode
 * Signature: (JISB)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetWaveOutputMode
  (JNIEnv *, jclass, jlong, jint, jshort, jbyte);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetWaveOutputMode
 * Signature: (JLorg/OpenNI/OutArg;Lorg/OpenNI/OutArg;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetWaveOutputMode
  (JNIEnv *, jclass, jlong, jobject, jobject, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToWaveOutputModeChanges
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToWaveOutputModeChanges
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromWaveOutputModeChanges
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromWaveOutputModeChanges
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetAudioMetaData
 * Signature: (JLorg/OpenNI/AudioMetaData;)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnGetAudioMetaData
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnCreateCodec
 * Signature: (JIJLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnCreateCodec
  (JNIEnv *, jclass, jlong, jint, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetCodecID
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetCodecID
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnEncodeData
 * Signature: (JJIJILorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnEncodeData
  (JNIEnv *, jclass, jlong, jlong, jint, jlong, jint, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnDecodeData
 * Signature: (JJIJILorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnDecodeData
  (JNIEnv *, jclass, jlong, jlong, jint, jlong, jint, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnCreateRecorder
 * Signature: (JLjava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnCreateRecorder
  (JNIEnv *, jclass, jlong, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetRecorderDestination
 * Signature: (JILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetRecorderDestination
  (JNIEnv *, jclass, jlong, jint, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetRecorderDestination
 * Signature: (JLorg/OpenNI/OutArg;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetRecorderDestination
  (JNIEnv *, jclass, jlong, jobject, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnAddNodeToRecording
 * Signature: (JJI)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnAddNodeToRecording
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRemoveNodeFromRecording
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRemoveNodeFromRecording
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRecord
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRecord
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetRecorderFormat
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_OpenNI_NativeMethods_xnGetRecorderFormat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnCreatePlayer
 * Signature: (JLjava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnCreatePlayer
  (JNIEnv *, jclass, jlong, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetPlayerRepeat
 * Signature: (JZ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetPlayerRepeat
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetPlayerSource
 * Signature: (JILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetPlayerSource
  (JNIEnv *, jclass, jlong, jint, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetPlayerSource
 * Signature: (JLorg/OpenNI/OutArg;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetPlayerSource
  (JNIEnv *, jclass, jlong, jobject, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnPlayerReadNext
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnPlayerReadNext
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSeekPlayerToTimeStamp
 * Signature: (JJI)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSeekPlayerToTimeStamp
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSeekPlayerToFrame
 * Signature: (JLjava/lang/String;II)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSeekPlayerToFrame
  (JNIEnv *, jclass, jlong, jstring, jint, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnTellPlayerTimestamp
 * Signature: (JLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnTellPlayerTimestamp
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnTellPlayerFrame
 * Signature: (JLjava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnTellPlayerFrame
  (JNIEnv *, jclass, jlong, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetPlayerNumFrames
 * Signature: (JLjava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetPlayerNumFrames
  (JNIEnv *, jclass, jlong, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetPlayerSupportedFormat
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_OpenNI_NativeMethods_xnGetPlayerSupportedFormat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnEnumeratePlayerNodes
 * Signature: (JLorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnEnumeratePlayerNodes
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsPlayerAtEOF
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsPlayerAtEOF
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnRegisterToEndOfFileReached
 * Signature: (JLjava/lang/Object;Ljava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnRegisterToEndOfFileReached
  (JNIEnv *, jclass, jlong, jobject, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnUnregisterFromEndOfFileReached
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_OpenNI_NativeMethods_xnUnregisterFromEndOfFileReached
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnSetPlaybackSpeed
 * Signature: (JD)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnSetPlaybackSpeed
  (JNIEnv *, jclass, jlong, jdouble);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetPlaybackSpeed
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_org_OpenNI_NativeMethods_xnGetPlaybackSpeed
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnCreateScriptNode
 * Signature: (JLjava/lang/String;Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnCreateScriptNode
  (JNIEnv *, jclass, jlong, jstring, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnScriptNodeGetSupportedFormat
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_OpenNI_NativeMethods_xnScriptNodeGetSupportedFormat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnLoadScriptFromFile
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnLoadScriptFromFile
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnLoadScriptFromString
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnLoadScriptFromString
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnScriptNodeRun
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnScriptNodeRun
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnProductionNodeTypeToString
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_OpenNI_NativeMethods_xnProductionNodeTypeToString
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnResolutionGetXRes
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnResolutionGetXRes
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnResolutionGetYRes
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnResolutionGetYRes
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnResolutionGetFromXYRes
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnResolutionGetFromXYRes
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnResolutionGetFromName
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnResolutionGetFromName
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnResolutionGetName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_OpenNI_NativeMethods_xnResolutionGetName
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetVersion
 * Signature: (Lorg/OpenNI/OutArg;)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetVersion
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsTypeGenerator
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsTypeGenerator
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnIsTypeDerivedFrom
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_org_OpenNI_NativeMethods_xnIsTypeDerivedFrom
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_OpenNI_NativeMethods
 * Method:    xnGetBytesPerPixelForPixelFormat
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_OpenNI_NativeMethods_xnGetBytesPerPixelForPixelFormat
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
